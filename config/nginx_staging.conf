#user  nobody;                                                                                               
worker_processes  2;                                                                                         
                                                                                                                                                                                                                                                                                                                             
events {                                                                                                     
    worker_connections  512;                                                                                
}                                                                                                            
                                                                                                             
                                                                                                             
http {                                                                                                       
    passenger_root /opt/ruby-enterprise-1.8/lib/ruby/gems/1.8/gems/passenger-3.0.11;
    passenger_ruby /opt/ruby-enterprise-1.8/bin/ruby;
    passenger_max_pool_size 2;                                                      
    # passenger_friendly_error_pages off;
    passenger_show_version_in_header off; # don't show passenger version
    server_tokens off; #... or nginx version
    # passenger_log_level  1;                                                        
                                                                                                             
    include       mime.types;                                                                                
    default_type  application/octet-stream;                                                                  
                                                                                                             
    log_format  main  '$remote_addr - $remote_user [$time_local] $request '                                 
                     '"$status" $body_bytes_sent "$http_referer" '                                         
                     '"$http_user_agent" "$http_x_forwarded_for"';                                         
                                                                                                             
    #access_log  logs/access.log  main;                                                                      
                                                                                                             
    sendfile        on;                                                                                      
    #tcp_nopush     on;                                                                                      
                                                                                                             
    #keepalive_timeout  0;                                                                                   
    keepalive_timeout  65;                                                                                   
                                                                                                             
		gzip on;
		gzip_buffers 16 8k;
		gzip_disable "MSIE [1-6]\.";
		gzip_proxied any;
		gzip_types text/plain text/css application/json application/x-javascript text/xml application/xml application/xml+rss text/javascript;

    server {
	    # port to listen on. Can also be set to an IP:PORT
        listen       80;
		    # Set the max size for file uploads to 10Mb
		    client_max_body_size 10M;
        # sets the domain[s] that this vhost server requests for
        server_name  openlylocal.com staging.openlylocal.com;
        # doc root
        root /home/cculture/sites/twfy_local/current/public;
				passenger_enabled on;                                                                                     
				rails_env staging;
				
				auth_basic "Login to see this site.";
        auth_basic_user_file staging_auth_passwd;

        # allow requests for images, js, css, and icons to go through
				# even if cap has been used to disable the site
				if ($request_filename ~* /(images|javascripts|stylesheets|assets)/) { break; }
				if ($request_filename ~* \.ico$) { break; }
				if ($request_filename ~* \.zip$) { break; }

				# this rewrites all the requests to the maintenance.html
        # page if it exists in the doc root. This is for capistrano's
        # disable web task
				if (-f $document_root/system/maintenance.html){
				  rewrite  ^(.*)$  /system/maintenance.html break;
					}
					
				## page caching 
				location /cache/ {
				        rewrite ^/cache/(.*)$ /cache/$http_host$1 break;
				}
				# added 2011-12-02 by CT as per http://guides.rubyonrails.org/asset_pipeline.html#manifest-files-and-directives
				location ~ ^/assets/ {
          expires 1y;
          add_header Cache-Control public;

          # Some browsers still send conditional-GET requests if there's a
          # Last-Modified header or an ETag header even if they haven't
          # reached the expiry date sent in the Expires header.
          add_header Last-Modified "";
          add_header ETag "";
          break;
        }

        # vhost specific access log
        access_log  logs/openlylocal.access.log  main;
		    # 				#error_page  404              /404.html;                                                             
		    # 
		    #     # redirect server error pages to the static page /50x.html                                           
		    #     #                                                                                                    
		        # error_page   500 502 503 504  /500.html;                                                             
		    #     location = /50x.html {                                                                               
		    #         root   html;                                                                                     
		    #     }                                                                                                    
			}
					
		server {
	    # port to listen on. Can also be set to an IP:PORT
        listen       80;
		    # Set the max size for file uploads to 10Mb
		    client_max_body_size 10M;
        # sets the domain[s] that this vhost server requests for
        server_name  opencharities.org  staging.opencharities.org;
        # doc root
        root /home/countc/sites/opencharities/current/public;
				passenger_enabled on;                                                                                     

				auth_basic "Login to see this site.";
        auth_basic_user_file staging_auth_passwd;

        # allow requests for images, js, css, and icons to go through
				# even if cap has been used to disable the site
				if ($request_filename ~* /(images|javascripts|stylesheets|tools)/) { break; }
				if ($request_filename ~* \.ico$) { break; }
				if ($request_filename ~* robots.txt$) { break; }

				# this rewrites all the requests to the maintenance.html
        # page if it exists in the doc root. This is for capistrano's
        # disable web task
        # if (-f $document_root/system/maintenance.html){
        #   rewrite  ^(.*)$  /system/maintenance.html break;
        #   }
				if (-f $document_root/system/maintenance.html) {
            return 503;
        }
        error_page 503 @maintenance;
        location @maintenance {
            rewrite  ^(.*)$  /system/maintenance.html last;
            break;
        }

				## page caching 
        # if (-f /cache/charities.html) { 
        #             rewrite (.*) /cache$1.html break;
        #             break; 
        #         }
				location /cache/ {
				        rewrite ^/cache/(.*)$ /cache/$http_host$1 break;
				}


        # vhost specific access log
        access_log  logs/opencharities.access.log  main;
		    # 				#error_page  404              /404.html;                                                             
		    # 
		    #     # redirect server error pages to the static page /50x.html                                           
		    #     #                                                                                                    
		        # error_page   500 502 503 504  /500.html;                                                             
		    #     location = /50x.html {                                                                               
		    #         root   html;                                                                                     
		    #     }                                                                                                    
  	}
    
  }