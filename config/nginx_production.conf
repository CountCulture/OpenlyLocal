# Deploy this file using cap production nginx:update_nginx_config
worker_processes  2;                                                                                         
                                                                                                                                                                                                                                                                                                                             
events {                                                                                                     
    worker_connections  1024;                                                                                
}                                                                                                            
                                                                                                             
                                                                                                             
http {
    # use this line when moving to new server
    passenger_root /opt/ruby-enterprise-1.8/lib/ruby/gems/1.8/gems/passenger-3.0.10;
    # passenger_root /opt/ruby-enterprise-1.8/lib/ruby/gems/1.8/gems/passenger-3.0.2;                              
    passenger_ruby /opt/ruby-enterprise-1.8/bin/ruby;
    passenger_max_pool_size 6;                                                      
    passenger_max_instances_per_app 3;
		# passenger_log_level  1;                                                        
                                                                                                             
    include       mime.types;                                                                                
    default_type  application/octet-stream;                                                                  
                                                                                                             
    log_format  main  '$remote_addr - $remote_user [$time_local] $request '                                 
                     '"$status" $body_bytes_sent "$http_referer" '                                         
                     '"$http_user_agent" "$http_x_forwarded_for"';                                         
                                                                                                             
    #access_log  logs/access.log  main;                                                                      
                                                                                                             
    sendfile        on;                                                                                      
    #tcp_nopush     on;                                                                                      
                                                                                                             
    #keepalive_timeout  0;                                                                                   
    keepalive_timeout  65;                                                                                   
                                                                                                             
		gzip on;
		gzip_buffers 16 8k;
		gzip_disable "MSIE [1-6]\.";
		gzip_proxied any;
		gzip_types text/plain text/css application/json application/x-javascript text/xml application/xml application/xml+rss text/javascript;

    server {
	    # port to listen on. Can also be set to an IP:PORT
        listen       80;
		    # Set the max size for file uploads to 10Mb
		    client_max_body_size 10M;
        # sets the domain[s] that this vhost server requests for
        server_name  openlylocal.com www.openlylocal.com assets.openlylocal.com;
        # doc root
        root /home/cculture/sites/twfy_local/current/public;
				passenger_enabled on;                                                                                     

        # allow requests for images, js, css, and icons to go through
				# even if cap has been used to disable the site
				if ($request_filename ~* /(images|javascripts|stylesheets)/) { break; }
				if ($request_filename ~* \.ico$) { break; }
				if ($request_filename ~* \.zip$) { break; }

				# this rewrites all the requests to the maintenance.html
        # page if it exists in the doc root. This is for capistrano's
        # disable web task
				if (-f $document_root/system/maintenance.html){
				  rewrite  ^(.*)$  /system/maintenance.html break;
					}
					
        # if (-f $document_root/system/cache/$uri/index.html) {
        #           rewrite (.*) /system/cache/$1/index.html break;
        #         }
        
				## passenger page caching 
				location /cache/ {
				        rewrite ^/cache/(.*)$ /cache/$http_host$1 break;
				}
				        

        # vhost specific access log
        access_log  logs/theyworkforyoulocal.access.log  main;
		    # 				#error_page  404              /404.html;                                                             
		    # 
		    #     # redirect server error pages to the static page /50x.html                                           
		    #     #                                                                                                    
		        # error_page   500 502 503 504  /500.html;                                                             
		    #     location = /50x.html {                                                                               
		    #         root   html;                                                                                     
		    #     }                                                                                                    
		}
			
		server { 
			listen 80; 
			server_name theyworkforyoulocal.com www.theyworkforyoulocal.com assets.theyworkforyoulocal.com; 
			rewrite ^/(.*) http://openlylocal.com$uri permanent; 
		}
		
		server {
      listen 80;
      server_name www.planningalerts.com;
      rewrite ^/(.*) http://planningalerts.com$1 permanent;
      }

    server {
      listen 80;
      server_name planningalerts.com;
      server_name_in_redirect off;
      root /home/countc/sites/planningalerts;

      access_log  logs/planningalerts.access.log  main;
      error_log logs/planningalerts.log;

      # location / {
      #     index index.html;
      #     }
      location / {
          index index.html;
          }
      # location /foo {
      #     try_files $uri @foo;
      #     }
      # location @foo {
      #         proxy_pass http://frontends;
      #         break;
      #     }
    }
  }