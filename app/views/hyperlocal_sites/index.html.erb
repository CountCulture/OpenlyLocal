<script type="text/javascript" charset="utf-8">
  var EARTH_RADIUS = 6378.137; //in kilometres
  var circle;
  var sites = <%= @hyperlocal_sites.to_json %>;
  
  function initMap() {
    if (GBrowserIsCompatible()) {
      var map = new GMap2(document.getElementById("map_canvas"));
      var center = new GLatLng(54.3, -3);
      var first_view = true;
      
      map.setCenter(center, 6);
      map.addControl(new GSmallMapControl());
      map.addControl(new GMapTypeControl());
      
      for (var i=0; i < sites.length; i++) {
        map.addOverlay(createMarker(sites[i].hyperlocal_site, map));
      };
            
    }
  }
  
  // Map Geography Utility functions - see http://www.movable-type.co.uk/scripts/latlong.html#destPoint  
  function getDestLatLng(latLng, bearing, distance) {
   var lat1 = latLng.latRadians();
   var lng1 = latLng.lngRadians();
   var brng = bearing*Math.PI/180;
   var dDivR = distance/EARTH_RADIUS;
   var lat2 = Math.asin( Math.sin(lat1)*Math.cos(dDivR) + Math.cos(lat1)*Math.sin(dDivR)*Math.cos(brng) );
   var lng2 = lng1 + Math.atan2(Math.sin(brng)*Math.sin(dDivR)*Math.cos(lat1), Math.cos(dDivR)-Math.sin(lat1)*Math.sin(lat2));
   return new GLatLng(lat2/ Math.PI * 180, lng2/ Math.PI * 180);
  }
  
  function drawCircle(curr_map, centrePt, rangeValue) {
   if(circle){curr_map.removeOverlay(circle)};
   var boundaries = getBoundaries(centrePt, rangeValue);
   circle = new GGroundOverlay("http://openlylocal.com/images/circle_overlay.png", boundaries);
   curr_map.addOverlay(circle);
  }

  function getBoundaries(centrePt, radius) {
   var hypotenuse = Math.sqrt(2 * radius * radius);
   var sw = getDestLatLng(centrePt, 225, hypotenuse);
   var ne = getDestLatLng(centrePt, 45, hypotenuse);
   return new GLatLngBounds(sw, ne);
  }

  function createMarker(site, map) {
    var icon = new GIcon(G_DEFAULT_ICON);
    var iconUrl = "http://chart.apis.google.com/chart?cht=mm&chs=20x20&chco=6699AAFF,336699FF,336699FF&ext=.png";
    icon.image = iconUrl;
    icon.iconSize = new GSize(20, 20);
    icon.shadowSize = new GSize(32, 20);
    icon.iconAnchor = new GPoint(10, 20);
    icon.infoWindowAnchor = new GPoint(10, 1);
    icon.printImage = iconUrl + "&chof=gif";
    icon.mozPrintImage = iconUrl + "&chf=bg,s,ECECD8" + "&chof=gif";

    var latlng = new GLatLng(site.lat, site.lng);
    var marker = new GMarker(latlng, { icon:icon });
    GEvent.addListener(marker,"click", function() {
      var infoCaption = "<div class='area'>" + site.area_covered + "</div><h4><a href='" + site.url + "' class='external'>" + site.title + "</a></h4>";
      infoCaption += (site.description ? ("<p>" + site.description.slice(0,50) + "...") : '<p>');
      infoCaption += "<a href='/hyperlocal_sites/" + site.id + "'>more info</a></p>";
      map.openInfoWindowHtml(latlng, infoCaption);
    });
    return marker;
  }

</script>

<p class='alert'><%= link_to "Add your hyperlocal site now", new_hyperlocal_site_path %></p>
<h1><%= @title %></h1>

<div id="hyperlocal_list_map" class="map_outer">
  <div id="map_canvas"></div>
</div>

<%- form_tag hyperlocal_sites_path, :id => "location_search", :method => :get do -%>
  <h3>Find hyperlocal sites closest to...</h3>
  <%= text_field_tag :location, params[:location], :class => "location_search" %>
  <%= submit_tag "Search", :disable_with => "Please wait..." %>
<%- end -%>

<ul id="hyperlocal_sites">
  <%- if params[:location] -%>
    <%= render :partial => 'hyperlocal_site', :collection => @hyperlocal_sites %>
  <%- else -%>
    <%- @hyperlocal_sites.group_by(&:country).each do |country, sites| -%>
      <li class="country">
        <%= country %>
        <ul>
          <%= render :partial => 'hyperlocal_site', :collection => sites %>
        </ul>
      </li>
    <%- end -%>
  <%- end -%>
</ul>


<%= render :partial => '/shared/api_info' %>
