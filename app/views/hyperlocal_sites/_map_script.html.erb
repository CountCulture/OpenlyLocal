<script type="text/javascript" charset="utf-8">
  var EARTH_RADIUS = 6378.137; //in kilometres
  var circle;
  
  function initMap() {
    if (GBrowserIsCompatible()) {
      var map = new GMap2(document.getElementById("map_canvas"));
      var lat = <%= (@hyperlocal_site.lat||54).to_f %>;
      var lng = <%=  @hyperlocal_site.lng.to_f %>;
      var distance = <%= @hyperlocal_site.distance_covered %>;
      var center = new GLatLng(lat, lng);
      var first_view = true;
      
      map.setCenter(center, 5);
      map.addControl(new GSmallMapControl());
      map.addControl(new GMapTypeControl());
      
      var marker = new GMarker(center, {draggable: true});
      
      GEvent.addListener(marker, "dragstart", function() {
        map.closeInfoWindow();
      });

      GEvent.addListener(marker, "dragend", function() {
        var point = marker.getPoint();
            if(first_view){map.setZoom(9);};
            first_view = false
            map.panTo(point);
        		document.getElementById("hyperlocal_site_lat").value = point.lat();
        		document.getElementById("hyperlocal_site_lng").value = point.lng();
        		distance = document.getElementById("hyperlocal_site_distance_covered").value;
            drawCircle(map, point, distance);
      });
      
      map.addOverlay(marker);
      drawCircle(map, center, distance);
      
    }
  }
  
  // Map Geography Utility functions - see http://www.movable-type.co.uk/scripts/latlong.html#destPoint  
  function getDestLatLng(latLng, bearing, distance) {
   var lat1 = latLng.latRadians();
   var lng1 = latLng.lngRadians();
   var brng = bearing*Math.PI/180;
   var dDivR = distance/EARTH_RADIUS;
   var lat2 = Math.asin( Math.sin(lat1)*Math.cos(dDivR) + Math.cos(lat1)*Math.sin(dDivR)*Math.cos(brng) );
   var lng2 = lng1 + Math.atan2(Math.sin(brng)*Math.sin(dDivR)*Math.cos(lat1), Math.cos(dDivR)-Math.sin(lat1)*Math.sin(lat2));
   return new GLatLng(lat2/ Math.PI * 180, lng2/ Math.PI * 180);
  }
  
  function drawCircle(curr_map, centrePt, rangeValue) {
   if(circle){curr_map.removeOverlay(circle)};
   var boundaries = getBoundaries(centrePt, rangeValue);
   circle = new GGroundOverlay("http://openlylocal.com/images/circle_overlay.png", boundaries);
   // console.info(circle); don't enable this in production
   curr_map.addOverlay(circle);
  }

  function getBoundaries(centrePt, radius) {
   var hypotenuse = Math.sqrt(2 * radius * radius);
   var sw = getDestLatLng(centrePt, 225, hypotenuse);
   var ne = getDestLatLng(centrePt, 45, hypotenuse);
   return new GLatLngBounds(sw, ne);
  }
  
  

</script>
